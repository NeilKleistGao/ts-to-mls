trait II[T]: { test: (T) -> (number) }

trait IEvent: { callback: (number) -> (unit) }

trait Simple2[T]: { abc: T }

trait Simple: { a: number; b: (bool) -> (string) }

trait Counter: { __call: (number) -> (string); interval: number; reset: unit -> (unit) }

trait StringArray: { __index: (number) -> (string) }

def get: ({ t: string }) -> (string)

trait Next: {} & Simple

def create: unit -> ({ v: (number) | (undefined) })

trait SearchFunc: { __call: (string) -> ((string) -> (bool)) }

trait IFoo: { a: string; b: (number) -> (number); c: unit -> (bool); d: (string) -> (unit) }

